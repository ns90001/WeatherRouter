{"ast":null,"code":"var _jsxFileName = \"/Users/naveen/cs0320/term-project-amanjal-igurland-jpate-nsharm25/frontend/src/Map.js\";\nimport React, { useRef } from 'react';\nimport './map.css';\nimport { withScriptjs, withGoogleMap, GoogleMap, Polyline } from \"react-google-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = withScriptjs(_c2 = withGoogleMap(_c = props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n  defaultZoom: 7,\n  defaultCenter: {\n    lat: 0,\n    lng: 0\n  },\n  ref: map => {\n    const bounds = new window.google.maps.LatLngBounds();\n    console.log(props);\n    console.log(props.weatherRoute);\n\n    for (let i = 0; i < props.route.length; i++) {\n      bounds.extend(props.route[i]);\n    }\n\n    map && map.fitBounds(bounds);\n  },\n  children: [/*#__PURE__*/_jsxDEV(Polyline, {\n    path: props.weatherRoute,\n    options: {\n      geodesic: true,\n      strokeColor: '#FF0000'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n    path: props.route,\n    options: {\n      geodesic: true,\n      strokeColor: '#445DFA'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 9\n}, this)));\n_c3 = Map;\nexport default Map;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Map$withScriptjs$withGoogleMap\");\n$RefreshReg$(_c2, \"Map$withScriptjs\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"sources":["/Users/naveen/cs0320/term-project-amanjal-igurland-jpate-nsharm25/frontend/src/Map.js"],"names":["React","useRef","withScriptjs","withGoogleMap","GoogleMap","Polyline","Map","props","lat","lng","map","bounds","window","google","maps","LatLngBounds","console","log","weatherRoute","i","route","length","extend","fitBounds","geodesic","strokeColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAO,WAAP;AACA,SAAQC,YAAR,EAAsBC,aAAtB,EAAqCC,SAArC,EAAgDC,QAAhD,QAA+D,mBAA/D;;AAEA,MAAMC,GAAG,GAAGJ,YAAY,OAACC,aAAa,MAAEI,KAAD,iBAC/B,QAAC,SAAD;AACI,EAAA,WAAW,EAAE,CADjB;AAEI,EAAA,aAAa,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE;AAAf,GAFnB;AAGI,EAAA,GAAG,EAAEC,GAAG,IAAI;AACR,UAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,YAAlB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAAK,CAACa,KAAN,CAAYC,MAAhC,EAAwCF,CAAC,EAAzC,EAA6C;AACzCR,MAAAA,MAAM,CAACW,MAAP,CAAcf,KAAK,CAACa,KAAN,CAAYD,CAAZ,CAAd;AACH;;AACDT,IAAAA,GAAG,IAAIA,GAAG,CAACa,SAAJ,CAAcZ,MAAd,CAAP;AACH,GAbL;AAAA,0BAcI,QAAC,QAAD;AACI,IAAA,IAAI,EAAEJ,KAAK,CAACW,YADhB;AAEI,IAAA,OAAO,EAAE;AACLM,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,WAAW,EAAE;AAFR;AAFb;AAAA;AAAA;AAAA;AAAA,UAdJ,eAqBI,QAAC,QAAD;AACI,IAAA,IAAI,EAAElB,KAAK,CAACa,KADhB;AAEI,IAAA,OAAO,EAAE;AACLI,MAAAA,QAAQ,EAAE,IADL;AAELC,MAAAA,WAAW,EAAE;AAFR;AAFb;AAAA;AAAA;AAAA;AAAA,UArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,QAD8B,CAAd,CAAxB;MAAMnB,G;AAgCN,eAAeA,GAAf","sourcesContent":["import React, {useRef} from 'react'\nimport './map.css'\nimport {withScriptjs, withGoogleMap, GoogleMap, Polyline} from \"react-google-maps\"\n\nconst Map = withScriptjs(withGoogleMap((props) =>\n        <GoogleMap\n            defaultZoom={7}\n            defaultCenter={{ lat: 0, lng: 0}}\n            ref={map => {\n                const bounds = new window.google.maps.LatLngBounds();\n\n                console.log(props);\n                console.log(props.weatherRoute);\n\n                for (let i = 0; i < props.route.length; i++) {\n                    bounds.extend(props.route[i])\n                }\n                map && map.fitBounds(bounds)\n            }}>\n            <Polyline\n                path={props.weatherRoute}\n                options={{\n                    geodesic: true,\n                    strokeColor: '#FF0000'\n                }}\n            />\n            <Polyline\n                path={props.route}\n                options={{\n                    geodesic: true,\n                    strokeColor: '#445DFA'\n                }}\n            />\n        </GoogleMap>\n    ))\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}